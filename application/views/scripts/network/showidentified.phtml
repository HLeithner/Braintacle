<?php
/**
 * Display identified devices on a subnet.
 *
 * $Id$
 *
 * Copyright (C) 2011-2013 Holger Schletz <holger.schletz@web.de>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

print "<div class=\"table_network_devices\">\n";

$headers = array(
    'MacAddress' => $this->translate('MAC address'),
    'IpAddress' => $this->translate('IP address'),
    'DiscoveryDate' => $this->translate('Discovery date'),
    'Type' => $this->translate('Type'),
    'Description' => $this->translate('Description'),
    'IdentifiedBy' => $this->translate('Idendified by'),
    'edit' => '',
    'delete' => '',
);

$formats = array(
    'edit' => 'text',
    'delete' => 'text',
);

$renderCallbacks = array(
    'edit' => 'renderEdit',
    'delete' => 'renderDelete',
);

function renderEdit($view, $device, $property)
{
    return $view->htmlTag(
        'a',
        $view->translate('Edit'),
        array(
            'href' => $view->BaseUrl()
                     . '/network/edit/macaddress/'
                     . urlencode($device->getMacAddress())
        ),
        true
    );
}

function renderDelete($view, $device, $property)
{
    return $view->htmlTag(
        'a',
        $view->translate('Delete'),
        array(
            'href' => $view->BaseUrl()
                     . '/network/delete/macaddress/'
                     . urlencode($device->getMacAddress())
        ),
        true
    );
}

print $this->getHelper('table')->table(
    $this->devices,
    null,
    $headers,
    $formats,
    'Model_NetworkDevice',
    null,
    $renderCallbacks
);

print "</div\n>";
